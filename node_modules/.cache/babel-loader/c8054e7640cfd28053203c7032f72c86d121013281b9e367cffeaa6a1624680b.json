{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hnkim\\\\PycharmProjects\\\\PythonProject\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport AWS from 'aws-sdk'; // AWS SDK 추가\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: 'user',\n    text: '넌 누구니?'\n  }, {\n    sender: 'ai',\n    text: \"나는 vision-space의 RAG 선생님이다. 무엇이든 물어봐랏!\"\n  }]);\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef(null);\n  const [s3Data, setS3Data] = useState(null); // S3 데이터 상태 관리\n\n  // S3 데이터 가져오기 함수\n  const fetchS3Data = async () => {\n    AWS.config.update({\n      region: 'ap-northeast-2',\n      accessKeyId: 'AKIARZ6GHXMPCU2ADGUW',\n      // IAM 사용자 Access Key\n      secretAccessKey: 'kgUuOHALyVZCAXg5K81X6D/3qz8Xw17AjQ6X2zH6' // IAM 사용자 Secret Key\n    });\n    const s3 = new AWS.S3();\n    const params = {\n      Bucket: 'dev-ai-data-bucket',\n      // S3 버킷 이름\n      Key: 'your-file-key.txt' // S3 파일 키\n    };\n    try {\n      const data = await s3.getObject(params).promise();\n      const fileContent = data.Body.toString('utf-8');\n      setS3Data(fileContent); // 가져온 데이터를 상태로 저장\n      console.log('S3 Data:', fileContent);\n    } catch (error) {\n      console.error('Error fetching S3 data:', error);\n    }\n  };\n\n  // 메시지 스크롤 하단으로 이동\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // 컴포넌트 렌더링 시 S3 데이터 가져오기\n  useEffect(() => {\n    fetchS3Data();\n  }, []);\n\n  // 메시지 전송 처리\n  const handleSend = async () => {\n    if (input.trim()) {\n      setMessages([...messages, {\n        sender: 'user',\n        text: input\n      }]);\n      setInput('');\n      try {\n        // EC2 서버에 POST 요청\n        const response = await fetch('http://ec2-15-164-241-6.ap-northeast-2.compute.amazonaws.com:5000/map_command', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            command: input\n          })\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setMessages(prevMessages => [...prevMessages, {\n            sender: 'ai',\n            text: data.result\n          }]);\n        } else {\n          setMessages(prevMessages => [...prevMessages, {\n            sender: 'ai',\n            text: '오류가 발생했어요. 다시 시도해주세요.'\n          }]);\n        }\n      } catch (error) {\n        setMessages(prevMessages => [...prevMessages, {\n          sender: 'ai',\n          text: '서버와 연결할 수 없어요. 다시 시도해주세요.'\n        }]);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        id: \"message-box\",\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender === 'user' ? 'user' : 'ai'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sender\",\n            children: message.sender === 'user' ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"./img/user.png\" // 사용자 이미지 경로\n              ,\n              alt: \"\",\n              className: \"avatar-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"./img/robot.png\" // AI 이미지 경로\n              ,\n              alt: \"\",\n              className: \"avatar-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text\",\n            children: [\" \", message.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"type to filter...\",\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          className: \"send-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"s3-data-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"S3 Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: s3Data || 'Loading...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"iD4Mwh1Hl7iXgPIk//kmXQ8H3R8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","AWS","jsxDEV","_jsxDEV","App","_s","messages","setMessages","sender","text","input","setInput","messagesEndRef","s3Data","setS3Data","fetchS3Data","config","update","region","accessKeyId","secretAccessKey","s3","S3","params","Bucket","Key","data","getObject","promise","fileContent","Body","toString","console","log","error","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","trim","response","fetch","method","headers","body","JSON","stringify","command","ok","json","prevMessages","result","className","children","id","map","message","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hnkim/PycharmProjects/PythonProject/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport AWS from 'aws-sdk'; // AWS SDK 추가\r\n\r\nconst App = () => {\r\n  const [messages, setMessages] = useState([\r\n    { sender: 'user', text: '넌 누구니?' },\r\n    { sender: 'ai', text: \"나는 vision-space의 RAG 선생님이다. 무엇이든 물어봐랏!\" },\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n  const messagesEndRef = useRef(null);\r\n  const [s3Data, setS3Data] = useState(null); // S3 데이터 상태 관리\r\n\r\n  // S3 데이터 가져오기 함수\r\n  const fetchS3Data = async () => {\r\n    AWS.config.update({\r\n      region: 'ap-northeast-2',\r\n      accessKeyId: 'AKIARZ6GHXMPCU2ADGUW', // IAM 사용자 Access Key\r\n      secretAccessKey: 'kgUuOHALyVZCAXg5K81X6D/3qz8Xw17AjQ6X2zH6', // IAM 사용자 Secret Key\r\n    });\r\n\r\n    const s3 = new AWS.S3();\r\n    const params = {\r\n      Bucket: 'dev-ai-data-bucket', // S3 버킷 이름\r\n      Key: 'your-file-key.txt', // S3 파일 키\r\n    };\r\n\r\n    try {\r\n      const data = await s3.getObject(params).promise();\r\n      const fileContent = data.Body.toString('utf-8');\r\n      setS3Data(fileContent); // 가져온 데이터를 상태로 저장\r\n      console.log('S3 Data:', fileContent);\r\n    } catch (error) {\r\n      console.error('Error fetching S3 data:', error);\r\n    }\r\n  };\r\n\r\n  // 메시지 스크롤 하단으로 이동\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  // 컴포넌트 렌더링 시 S3 데이터 가져오기\r\n  useEffect(() => {\r\n    fetchS3Data();\r\n  }, []);\r\n\r\n  // 메시지 전송 처리\r\n  const handleSend = async () => {\r\n    if (input.trim()) {\r\n      setMessages([...messages, { sender: 'user', text: input }]);\r\n      setInput('');\r\n\r\n      try {\r\n        // EC2 서버에 POST 요청\r\n        const response = await fetch(\r\n          'http://ec2-15-164-241-6.ap-northeast-2.compute.amazonaws.com:5000/map_command',\r\n          {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ command: input }),\r\n          }\r\n        );\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setMessages((prevMessages) => [\r\n            ...prevMessages,\r\n            { sender: 'ai', text: data.result },\r\n          ]);\r\n        } else {\r\n          setMessages((prevMessages) => [\r\n            ...prevMessages,\r\n            { sender: 'ai', text: '오류가 발생했어요. 다시 시도해주세요.' },\r\n          ]);\r\n        }\r\n      } catch (error) {\r\n        setMessages((prevMessages) => [\r\n          ...prevMessages,\r\n          { sender: 'ai', text: '서버와 연결할 수 없어요. 다시 시도해주세요.' },\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"chat-container\">\r\n        <div className=\"messages\" id=\"message-box\">\r\n          {messages.map((message, index) => (\r\n            <div\r\n              key={index}\r\n              className={`message ${message.sender === 'user' ? 'user' : 'ai'}`}\r\n            >\r\n              <span className=\"sender\">\r\n                {message.sender === 'user' ? (\r\n                  <img\r\n                    src=\"./img/user.png\" // 사용자 이미지 경로\r\n                    alt=\"\"\r\n                    className=\"avatar-image\"\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    src=\"./img/robot.png\" // AI 이미지 경로\r\n                    alt=\"\"\r\n                    className=\"avatar-image\"\r\n                  />\r\n                )}\r\n              </span>\r\n              <span className=\"text\"> {message.text}</span>\r\n            </div>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"type to filter...\"\r\n            className=\"input-field\"\r\n          />\r\n          <button onClick={handleSend} className=\"send-button\">\r\n            Send\r\n          </button>\r\n        </div>\r\n        <div className=\"s3-data-container\">\r\n          <h3>S3 Data:</h3>\r\n          <pre>{s3Data || 'Loading...'}</pre>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}