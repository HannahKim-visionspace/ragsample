{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hnkim\\\\PycharmProjects\\\\PythonProject\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: 'user',\n    text: '넌 누구니?'\n  }, {\n    sender: 'ai',\n    text: \"나는 vision-space의 RAG 선생님이다. 무엇이든 물어봐랏!\"\n  }]);\n  const [input, setInput] = useState('');\n  const handleSend = () => {\n    if (input.trim()) {\n      setMessages([...messages, {\n        sender: 'user',\n        text: input\n      }]);\n      setInput('');\n      // Simulate AI response\n      setTimeout(() => {\n        setMessages(prevMessages => [...prevMessages, {\n          sender: 'ai',\n          text: `Response to: ${input}`\n        }]);\n      }, 1000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        id: \"message-box\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender === 'user' ? 'user' : 'ai'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sender\",\n            children: [message.sender === 'user' ? 'You' : 'Chiharu Yamada', \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text\",\n            children: [\" \", message.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type your message here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"BjzIXbLrBFOQqgYWc3jFn6EpDzA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","messages","setMessages","sender","text","input","setInput","handleSend","trim","setTimeout","prevMessages","className","children","id","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hnkim/PycharmProjects/PythonProject/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [messages, setMessages] = useState([\r\n    { sender: 'user', text: '넌 누구니?' },\r\n    { sender: 'ai', text: \"나는 vision-space의 RAG 선생님이다. 무엇이든 물어봐랏!\" },\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleSend = () => {\r\n    if (input.trim()) {\r\n      setMessages([...messages, { sender: 'user', text: input }]);\r\n      setInput('');\r\n      // Simulate AI response\r\n      setTimeout(() => {\r\n        setMessages((prevMessages) => [\r\n          ...prevMessages,\r\n          { sender: 'ai', text: `Response to: ${input}` },\r\n        ]);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"chat-container\">\r\n        <div className=\"messages\" id=\"message-box\">\r\n          {messages.map((message, index) => (\r\n            <div\r\n              key={index}\r\n              className={`message ${message.sender === 'user' ? 'user' : 'ai'}`}\r\n            >\r\n              <span className=\"sender\">{message.sender === 'user' ? 'You' : 'Chiharu Yamada'}:</span>\r\n              <span className=\"text\"> {message.text}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Type your message here...\"\r\n          />\r\n          <button onClick={handleSend}>Generate</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}