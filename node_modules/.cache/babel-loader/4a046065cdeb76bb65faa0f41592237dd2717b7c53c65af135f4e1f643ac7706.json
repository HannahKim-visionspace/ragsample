{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import'./App.css';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const App=()=>{const[messages,setMessages]=useState([{sender:'user',text:'넌 누구니?'},{sender:'ai',text:\"나는 vision-space의 RAG 선생님이다. 무엇이든 물어봐랏!\"}]);const[input,setInput]=useState('');const messagesEndRef=useRef(null);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});};useEffect(()=>{scrollToBottom();},[messages]);const handleSend=async()=>{if(input.trim()){setMessages([...messages,{sender:'user',text:input}]);setInput('');// API 요청 처리 (생략)\n}};return/*#__PURE__*/_jsx(\"div\",{className:\"app-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"messages\",id:\"message-box\",children:[messages.map((message,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"message \".concat(message.sender==='user'?'user':'ai'),children:[/*#__PURE__*/_jsxs(\"span\",{className:\"sender\",children:[message.sender==='user'?'You':'RAG Assistant',\":\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"text\",children:[\" \",message.text]})]},index)),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:input,onChange:e=>setInput(e.target.value),placeholder:\"type to filter...\",className:\"input-field\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSend,className:\"clear-button\",children:\"Clear\"})]})]})});};export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxs","_jsxs","jsx","_jsx","App","messages","setMessages","sender","text","input","setInput","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","trim","className","children","id","map","message","index","concat","ref","type","value","onChange","e","target","placeholder","onClick"],"sources":["C:/Users/hnkim/PycharmProjects/PythonProject/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [messages, setMessages] = useState([\r\n    { sender: 'user', text: '넌 누구니?' },\r\n    { sender: 'ai', text: \"나는 vision-space의 RAG 선생님이다. 무엇이든 물어봐랏!\" },\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const handleSend = async () => {\r\n    if (input.trim()) {\r\n      setMessages([...messages, { sender: 'user', text: input }]);\r\n      setInput('');\r\n      // API 요청 처리 (생략)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"chat-container\">\r\n        <div className=\"messages\" id=\"message-box\">\r\n          {messages.map((message, index) => (\r\n            <div\r\n              key={index}\r\n              className={`message ${message.sender === 'user' ? 'user' : 'ai'}`}\r\n            >\r\n              <span className=\"sender\">{message.sender === 'user' ? 'You' : 'RAG Assistant'}:</span>\r\n              <span className=\"text\"> {message.text}</span>\r\n            </div>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"type to filter...\"\r\n            className=\"input-field\"\r\n          />\r\n          <button onClick={handleSend} className=\"clear-button\">\r\n            Clear\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAC1D,MAAO,WAAW,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAEnB,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,CACvC,CAAEU,MAAM,CAAE,MAAM,CAAEC,IAAI,CAAE,QAAS,CAAC,CAClC,CAAED,MAAM,CAAE,IAAI,CAAEC,IAAI,CAAE,wCAAyC,CAAC,CACjE,CAAC,CACF,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAAc,cAAc,CAAGZ,MAAM,CAAC,IAAI,CAAC,CAEnC,KAAM,CAAAa,cAAc,CAAGA,CAAA,GAAM,KAAAC,qBAAA,CAC3B,CAAAA,qBAAA,CAAAF,cAAc,CAACG,OAAO,UAAAD,qBAAA,iBAAtBA,qBAAA,CAAwBE,cAAc,CAAC,CAAEC,QAAQ,CAAE,QAAS,CAAC,CAAC,CAChE,CAAC,CAEDlB,SAAS,CAAC,IAAM,CACdc,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,CAACP,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAAY,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAIR,KAAK,CAACS,IAAI,CAAC,CAAC,CAAE,CAChBZ,WAAW,CAAC,CAAC,GAAGD,QAAQ,CAAE,CAAEE,MAAM,CAAE,MAAM,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAC,CAAC,CAC3DC,QAAQ,CAAC,EAAE,CAAC,CACZ;AACF,CACF,CAAC,CAED,mBACEP,IAAA,QAAKgB,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC5BnB,KAAA,QAAKkB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BnB,KAAA,QAAKkB,SAAS,CAAC,UAAU,CAACE,EAAE,CAAC,aAAa,CAAAD,QAAA,EACvCf,QAAQ,CAACiB,GAAG,CAAC,CAACC,OAAO,CAAEC,KAAK,gBAC3BvB,KAAA,QAEEkB,SAAS,YAAAM,MAAA,CAAaF,OAAO,CAAChB,MAAM,GAAK,MAAM,CAAG,MAAM,CAAG,IAAI,CAAG,CAAAa,QAAA,eAElEnB,KAAA,SAAMkB,SAAS,CAAC,QAAQ,CAAAC,QAAA,EAAEG,OAAO,CAAChB,MAAM,GAAK,MAAM,CAAG,KAAK,CAAG,eAAe,CAAC,GAAC,EAAM,CAAC,cACtFN,KAAA,SAAMkB,SAAS,CAAC,MAAM,CAAAC,QAAA,EAAC,GAAC,CAACG,OAAO,CAACf,IAAI,EAAO,CAAC,GAJxCgB,KAKF,CACN,CAAC,cACFrB,IAAA,QAAKuB,GAAG,CAAEf,cAAe,CAAE,CAAC,EACzB,CAAC,cACNV,KAAA,QAAKkB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BjB,IAAA,UACEwB,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEnB,KAAM,CACboB,QAAQ,CAAGC,CAAC,EAAKpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC1CI,WAAW,CAAC,mBAAmB,CAC/Bb,SAAS,CAAC,aAAa,CACxB,CAAC,cACFhB,IAAA,WAAQ8B,OAAO,CAAEhB,UAAW,CAACE,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,OAEtD,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAhB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}